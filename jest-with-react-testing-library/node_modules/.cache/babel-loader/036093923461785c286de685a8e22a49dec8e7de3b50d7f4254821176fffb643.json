{"ast":null,"code":"const express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst app = express();\nconst port = 3001;\n\n// Sample users database\nconst users = [{\n  username: \"user1\",\n  password: \"Passw0rd!\"\n}, {\n  username: \"user2\",\n  password: \"P@ssw0rd!\"\n}];\napp.use(bodyParser.json());\n\n// Login endpoint\napp.post(\"/api/login\", (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const user = users.find(user => user.username === username);\n  if (!user || user.password !== password) {\n    return res.status(401).json({\n      message: \"Invalid credentials\"\n    });\n  }\n  res.status(200).json({\n    message: \"Login successful\"\n  });\n});\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});","map":{"version":3,"names":["express","require","bodyParser","app","port","users","username","password","use","json","post","req","res","body","user","find","status","message","listen","console","log"],"sources":["C:/Users/user/Desktop/MERN/React Testing Library/my-first-testing/src/Component/Login.js"],"sourcesContent":["const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\n\r\nconst app = express();\r\nconst port = 3001;\r\n\r\n// Sample users database\r\nconst users = [\r\n  { username: \"user1\", password: \"Passw0rd!\" },\r\n  { username: \"user2\", password: \"P@ssw0rd!\" },\r\n];\r\n\r\napp.use(bodyParser.json());\r\n\r\n// Login endpoint\r\napp.post(\"/api/login\", (req, res) => {\r\n  const { username, password } = req.body;\r\n  const user = users.find((user) => user.username === username);\r\n\r\n  if (!user || user.password !== password) {\r\n    return res.status(401).json({ message: \"Invalid credentials\" });\r\n  }\r\n\r\n  res.status(200).json({ message: \"Login successful\" });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;;AAEjB;AACA,MAAMC,KAAK,GAAG,CACZ;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAY,CAAC,EAC5C;EAAED,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAY,CAAC,CAC7C;AAEDJ,GAAG,CAACK,GAAG,CAACN,UAAU,CAACO,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAN,GAAG,CAACO,IAAI,CAAC,YAAY,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEN,QAAQ;IAAEC;EAAS,CAAC,GAAGI,GAAG,CAACE,IAAI;EACvC,MAAMC,IAAI,GAAGT,KAAK,CAACU,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACR,QAAQ,KAAKA,QAAQ,CAAC;EAE7D,IAAI,CAACQ,IAAI,IAAIA,IAAI,CAACP,QAAQ,KAAKA,QAAQ,EAAE;IACvC,OAAOK,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAAEQ,OAAO,EAAE;IAAsB,CAAC,CAAC;EACjE;EAEAL,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;IAAEQ,OAAO,EAAE;EAAmB,CAAC,CAAC;AACvD,CAAC,CAAC;AAEFd,GAAG,CAACe,MAAM,CAACd,IAAI,EAAE,MAAM;EACrBe,OAAO,CAACC,GAAG,CAAE,6BAA4BhB,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}