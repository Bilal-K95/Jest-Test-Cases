{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\MERN\\\\React Testing Library\\\\my-first-testing\\\\src\\\\Component\\\\Increament.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function Increament() {\n//   const [amount, setAmount] = useState(0);\n//   const [count, setCount] = useState(0);\n\n//   const handleOnSetval = () => {\n//     setAmount(amount);\n//   };\n//   return (\n//     <>\n//       <div>Increament</div>\n//       <h1>{amount}</h1>\n//       <button onClick={setCount(count + 1)}>Increament</button>\n//       <input type=\"text\" onChange={setAmount((e) => e.target.value)} />\n//       <button onClick={handleOnSetval}>Set</button>\n//     </>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Increament() {\n  _s();\n  const [amount, setAmount] = useState(0);\n  const [count, setCount] = useState(0);\n  const handleOnSetval = () => {\n    setAmount(amount);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Increament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Increament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCount,\n      children: \"Increament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" */}\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: setAmount(e => e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnSetval,\n      children: \"Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnSetval,\n      children: \"Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Increament, \"UbZX7SfFr3TF2UbcqGbJjG6F2Cg=\");\n_c = Increament;\nvar _c;\n$RefreshReg$(_c, \"Increament\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Increament","_s","amount","setAmount","count","setCount","handleOnSetval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleCount","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/MERN/React Testing Library/my-first-testing/src/Component/Increament.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export default function Increament() {\r\n//   const [amount, setAmount] = useState(0);\r\n//   const [count, setCount] = useState(0);\r\n\r\n//   const handleOnSetval = () => {\r\n//     setAmount(amount);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <div>Increament</div>\r\n//       <h1>{amount}</h1>\r\n//       <button onClick={setCount(count + 1)}>Increament</button>\r\n//       <input type=\"text\" onChange={setAmount((e) => e.target.value)} />\r\n//       <button onClick={handleOnSetval}>Set</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Increament() {\r\n  const [amount, setAmount] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const handleOnSetval = () => {\r\n    setAmount(amount);\r\n  };\r\n  return (\r\n    <>\r\n      <div>Increament</div>\r\n      <div>Increament</div> <h1>{amount}</h1>\r\n      <button onClick={handleCount}>Increament</button> */}\r\n      <input type=\"text\" onChange={setAmount((e) => e.target.value)} />\r\n      <button onClick={handleOnSetval}>Set</button>\r\n      <button onClick={handleOnSetval}>Set</button>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BH,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EACD,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBd,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAd,OAAA;MAAAU,QAAA,EAAKL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCd,OAAA;MAAQe,OAAO,EAAEC,WAAY;MAAAN,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,QACjD,eAAAd,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEZ,SAAS,CAAEa,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEd,OAAA;MAAQe,OAAO,EAAEN,cAAe;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7Cd,OAAA;MAAQe,OAAO,EAAEN,cAAe;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7C,CAAC;AAEP;AAACV,EAAA,CAjBuBD,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}